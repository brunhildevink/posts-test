{"version":3,"sources":["components/Header.tsx","components/Form.tsx","components/Post.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","headerTitle","marginTop","fontSize","fontFamily","Header","classes","className","formContainer","breakpoints","up","display","justifyContent","form","down","width","Form","handleSearchFilter","Grid","onSubmit","TextField","label","variant","type","close","marginLeft","transform","image","background","backgroundSize","height","title","textOverflow","overflow","maxWidth","whiteSpace","itemContainer","borderRadius","margin","padding","alignItems","boxShadow","buttonGroup","likesContainer","flexFlow","textAlign","fontWeight","likes","Post","post","handleLikeIncrement","handleRemoveItem","container","spacing","item","lg","xs","body","Fab","size","color","onClick","id","navbar","App","useState","data","setData","amountOfPosts","setAmountOfPosts","error","setError","isLoaded","setIsLoaded","currentPage","setCurrentPage","useEffect","fetchData","fetch","then","res","json","result","length","handlePostsGeneration","newResult","indexOfLastPost","indexOfFirstPost","i","push","reverse","sortedData","slice","sort","a","b","newPosts","foundPost","find","index","indexOf","splice","message","Container","Pagination","count","onChange","event","value","e","preventDefault","allPosts","searchQuery","target","toLowerCase","filteredPosts","filter","includes","map","CircularProgress","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.011b075e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  headerTitle: {\r\n    marginTop: \"100px\",\r\n    fontSize: \"1.6em\",\r\n    fontFamily: \"roboto, sans serif\"\r\n  }\r\n}));\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <header className={classes.headerTitle}>\r\n      <h1>Browse articles</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\ntype Props = {\r\n  handleSearchFilter: (e: any) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formContainer: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: \"flex\",\r\n      justifyContent: \"flex-end\"\r\n    },\r\n  },\r\n  form: {\r\n    [theme.breakpoints.down('md')]: {\r\n      width: \"100%\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst Form = ({ handleSearchFilter }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid className={classes.formContainer}>\r\n      <form className={classes.form} onSubmit={handleSearchFilter}>\r\n        <TextField className={classes.form} label=\"Search by title\" variant=\"standard\" type=\"text\" />\r\n      </form>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// models\r\nimport { PostModel } from '../models/PostModel';\r\n\r\ntype Props = {\r\n  post: PostModel;\r\n  handleLikeIncrement: (id: number) => void;\r\n  handleRemoveItem: (id: number) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    marginLeft: \"10px\",\r\n    transform: \"rotate(45deg)\"\r\n  },\r\n  image: {\r\n    background: \"url('https://via.placeholder.com/600/56a8c2') no-repeat center center\",\r\n    backgroundSize: \"cover\",\r\n    height: \"200px\",\r\n  },\r\n  title: {\r\n    textOverflow: \"ellipsis\",\r\n    overflow: \"hidden\",\r\n    maxWidth: \"400px\", \r\n    height: \"1.2em\",\r\n    whiteSpace: \"nowrap\"\r\n  },\r\n  itemContainer: {\r\n    fontFamily: \"roboto, sans serif\",\r\n    background: \"#fff\",\r\n    borderRadius: \"4px\",\r\n    margin: \"20px 0\",\r\n    padding: \"20px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    boxShadow: \"0px 2px 6px 0px rgba(50, 50, 50, 0.1)\",\r\n    [theme.breakpoints.down('md')]: {\r\n      margin: \"0\",\r\n      marginTop: \"20px\",\r\n      padding: \"0\"\r\n    }\r\n  },\r\n  buttonGroup: {\r\n    marginTop: \"30px\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  likesContainer: {\r\n    display: \"flex\",\r\n    flexFlow: \"column\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  likes: {\r\n    marginTop: \"10px\"\r\n  }\r\n}));\r\n\r\nconst Post = ({post, handleLikeIncrement, handleRemoveItem, ...props}: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3} className={classes.itemContainer}>\r\n      <Grid item lg={2} xs={12} className={classes.image} />\r\n\r\n      <Grid item lg={8} xs={12}>\r\n        <h1 className={classes.title}>{post.title}</h1>\r\n        <p>{post.body}</p>\r\n      </Grid>\r\n\r\n      <Grid item lg={2} xs={12} className={classes.buttonGroup}>\r\n        <Grid item className={classes.likesContainer}>\r\n          <Fab size=\"small\" color=\"secondary\">\r\n            <FavoriteIcon onClick={() => handleLikeIncrement(post.id)}>Like</FavoriteIcon>\r\n          </Fab>\r\n          <span className={classes.likes}>{post.likes}</span>\r\n        </Grid>\r\n        \r\n        <Grid item>\r\n          <Fab size=\"small\" color=\"primary\" className={classes.close}>\r\n            <AddIcon onClick={() => handleRemoveItem(post.id)}>Remove</AddIcon>\r\n          </Fab>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Post;","import React, { useEffect, useState } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n// models\r\nimport { PostModel } from './models/PostModel';\r\n\r\n// components\r\nimport Header from './components/Header';\r\nimport Form from './components/Form';\r\nimport Post from './components/Post';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  navbar: {\r\n    [theme.breakpoints.up('md')]: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"flex-end\"\r\n    }\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const [data, setData] = useState<PostModel[]>([]);\r\n  const [amountOfPosts, setAmountOfPosts] = useState<number>(0)\r\n  const [error, setError] = useState<any>();\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n\r\n  const classes = useStyles();\r\n\r\n  const amountPerPage = 4;\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [currentPage])\r\n\r\n  const fetchData = () => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        setIsLoaded(true);\r\n        setAmountOfPosts(result.length)\r\n        handlePostsGeneration(result);\r\n      },\r\n      (error) => {\r\n        setIsLoaded(true);\r\n        setError(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  const handlePostsGeneration = (result: Array<any>) => {\r\n    const newResult: Array<any> = [];\r\n\r\n    const indexOfLastPost = currentPage * amountPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - amountPerPage;\r\n    \r\n    for(let i = 0; i < result.length; i++) {\r\n      result[i].likes = i;\r\n      newResult.push(result[i])\r\n    }\r\n\r\n    newResult.reverse();\r\n    \r\n    const currentPosts = newResult.slice(indexOfFirstPost, indexOfLastPost);\r\n    const sortedData = currentPosts.sort((a, b) => (a.likes < b.likes) ? 1 : -1);\r\n    \r\n    setData(sortedData);\r\n  }\r\n\r\n  const handleRemoveItem = (id: number) => {\r\n    const newPosts = [...data];\r\n    const foundPost: any = newPosts.find(item => item.id === id);\r\n    const index = newPosts.indexOf(foundPost);\r\n    newPosts.splice(index, 1);\r\n    setData(newPosts);\r\n  }\r\n\r\n  const handleLikeIncrement = (id: number) => {\r\n    const newPosts = [...data];\r\n    const foundPost: any = newPosts.find(item => item.id === id);\r\n    if (foundPost) {\r\n      foundPost.likes += 1;\r\n    }\r\n    const sortedData = newPosts.sort((a, b) => (a.likes < b.likes) ? 1 : -1);\r\n    setData(sortedData) \r\n  }\r\n\r\n  const handleSearchFilter = (e: any) => {\r\n    e.preventDefault();\r\n    const allPosts = [...data];\r\n    const searchQuery = e.target[0].value.toLowerCase();\r\n    if (searchQuery.length === 0) {\r\n      fetchData();\r\n    } else {\r\n        const filteredPosts = allPosts.filter(post => {\r\n          return post.title.toLowerCase().includes(searchQuery);\r\n        });\r\n        setData(filteredPosts);\r\n    }\r\n  }\r\n\r\n  const handlePagination = (event: any, value: number) => {\r\n    setCurrentPage(value);\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <>\r\n        <h1>Loading...</h1>\r\n        <CircularProgress />\r\n      </>\r\n    ) \r\n  } else {\r\n    return (\r\n      <Container>\r\n          <Header />\r\n          <Grid className={classes.navbar}>\r\n            <Grid item xs={12} lg={6}>\r\n              <Pagination count={amountOfPosts / amountPerPage} onChange={handlePagination} />\r\n            </Grid>\r\n            <Grid item xs={12} lg={6}>\r\n              <Form handleSearchFilter={handleSearchFilter} />\r\n            </Grid>\r\n          </Grid>\r\n          {\r\n            data.map((item, index) => (\r\n                <Post\r\n                  key={index}\r\n                  handleLikeIncrement={handleLikeIncrement}\r\n                  handleRemoveItem={handleRemoveItem}\r\n                  post={item}\r\n                />\r\n            ))\r\n          }\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}